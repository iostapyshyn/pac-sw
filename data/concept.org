#+STARTUP: content
#+PROPERTY: header-args:python :session *PAC-SW Notebook*

* Init
#+begin_src python :results none
  import pandas as pd
  import matplotlib.pyplot as plt
  from os import path

  from data import *

  fig_d = 'concept'

  plt.style.use('bmh')
  plt.rcParams["font.family"] = "Rotis Sans Serif Std"
  plt.rcParams["font.size"] = 14

  aarch64_d = 'tacle-bench/aarch64'
  aarch64_m = Analysis(Measurement(path.join(aarch64_d, "nopac.csv")),
                       Measurement(path.join(aarch64_d, "pac.csv")),
                       Build(path.join(aarch64_d, "build.csv")))

  x86_d = 'tacle-bench/x86_64'
  x86_m = Analysis(Measurement(path.join(x86_d, "nopac.csv")),
                       Measurement(path.join(x86_d, "pac.csv")),
                       Build(path.join(x86_d, "build.csv")))
#+end_src

* Overhead
#+begin_src python :results value raw
  aarch64_oh = aarch64_m.overhead()
  x86_oh = x86_m.overhead()

  oh = pd.concat([aarch64_oh, x86_oh], axis=1)
  oh.columns = ['aarch64', 'x86-64']

  pd2org(oh)
#+end_src

#+begin_src python :results value raw
  aarch64_ins = aarch64_m.b['inst']/aarch64_m.b['total']*100
  x86_ins = x86_m.b['inst']/x86_m.b['total']*100

  ins = pd.concat([aarch64_ins, x86_ins], axis=1)
  ins.columns = ['aarch64', 'x86-64']

  pd2org(ins)
#+end_src

#+begin_src python :results file
  f = path.join(fig_d, 'overhead.pdf')

  fig, axes = plt.subplots(nrows=2, ncols=1, figsize=[12,8], sharex=True)

  ins.plot(ax=axes[0], kind='bar', ylabel='Protected functions', width=0.75)
  oh.plot(ax=axes[1], kind='bar', ylabel='Overhead', xlabel='Benchmark', width=0.75)

  for ax in axes:
      ax.set_axisbelow(True)
      ax.set_yticklabels(['{:g} %'.format(x) for x in ax.get_yticks()])

  labels = axes[1].get_xticklabels()      
  axes[1].set_xticklabels(labels, rotation=45, ha='right')

  fig.subplots_adjust(bottom=0.175, top=0.95, left=0.075, right=0.925)
  fig.savefig(f)
  f
#+end_src

