#!/usr/bin/env python3

import usbtmc
import sys
import subprocess
import time

THREADS = 4
N = 320000

assert len(sys.argv) == 4
experiment = sys.argv[1]
host = sys.argv[2]
port = sys.argv[3]

instr = usbtmc.Instrument(0x1ab1, 0x09c4)
print(instr.ask("*IDN?"))

instr.write(":FUNction:VOLTage:DC")
instr.write(":RATE:VOLTage:DC M")

time.sleep(1)

v_samples = 50
voltage = 0
for i in range(v_samples):
    voltage += float(instr.ask(":MEASure:VOLTage:DC?"))
    time.sleep(0.1)
voltage /= v_samples

print(f"Voltage is {voltage}")
with open(f"data/{experiment}-voltage.csv", "w") as f:
    f.write(f"{voltage}\n")

instr.write(":FUNction:CURRent:DC")
instr.write(":RATE:CURRent:DC M")

time.sleep(1)

p = subprocess.Popen(f"../memtier_benchmark/memtier_benchmark -s {host} -p {port} -P memcache_text -t {THREADS} " +
                     f"-n {N} -o data/{experiment}.out", shell=True)


with open(f"data/{experiment}-current.csv", "w") as f:
    t0 = time.time()

    while p.poll() is None:
        meas = instr.ask(":MEASure:CURRent:DC?")
        t = time.time() - t0
        f.write(f"{t},{meas}\n")

        time.sleep(0.1)
